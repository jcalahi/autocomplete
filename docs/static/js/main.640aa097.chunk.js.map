{"version":3,"sources":["pages/searchMap/components/searchInput/SearchInput.js","store/actions/searchMapActions.js","store/actions/types.js","pages/searchMap/components/searchList/SearchList.js","pages/searchMap/components/searchResult/components/marker/Marker.js","pages/searchMap/components/searchResult/SearchResult.js","pages/searchMap/SearchMap.js","App.js","store/reducers/searchResultsReducer.js","store/reducers/index.js","store/index.js","index.js"],"names":["mapDispatchToProps","searchMapOnPlaceChanged","place","type","payload","connect","inputRef","useRef","googleMapsRef","handlePlaceChanged","useCallback","current","getPlace","value","useEffect","window","google","maps","places","Autocomplete","mapListener","addListener","removeListener","ref","className","placeholder","searchMapOnDelete","placeId","searchMapOnView","searchResults","searchMap","length","dataSource","renderItem","item","Item","actions","key","onClick","place_id","Meta","avatar","src","icon","title","name","description","formatted_address","Marker","coordinates","style","height","width","bootstrapURLKeys","process","defaultZoom","center","lat","lng","text","SearchMap","span","App","defaultState","reducers","state","action","geometry","location","filter","result","rootReducer","combineReducers","middleware","composeWithDevTools","applyMiddleware","thunk","store","legacy_createStore","ReactDOM","render","document","getElementById"],"mappings":"mRAgCMA,EAAqB,CAAEC,wBC9BU,SAACC,GACtC,MAAO,CACLC,KCJuC,8BDKvCC,QAASF,KD6BEG,cAAQ,KAAML,EAAdK,EA9BK,SAAC,GAAiC,IAA/BJ,EAA8B,EAA9BA,wBACfK,EAAWC,mBACXC,EAAgBD,mBAEhBE,EAAqBC,uBAAY,WACrC,IAAMR,EAAQM,EAAcG,QAAQC,WACpCN,EAASK,QAAQE,MAAQ,GACzBZ,EAAwBC,KACvB,CAACD,IAWJ,OATAa,qBAAU,WACRN,EAAcG,QAAU,IAAII,OAAOC,OAAOC,KAAKC,OAAOC,aAAab,EAASK,SAC5E,IAAMS,EAAcZ,EAAcG,QAAQU,YAAY,gBAAiBZ,GAEvE,OAAO,WACLD,EAAcG,QAAQW,eAAeF,MAEtC,CAACX,IAGF,2BACEc,IAAKjB,EACLkB,UAAU,YACVC,YAAY,yB,2BGoBZzB,EAAqB,CAAE0B,kBF/BI,SAACC,GAChC,MAAO,CACLxB,KChBgC,uBDiBhCC,QAASuB,IE4BmCC,gBFtCjB,SAAC1B,GAC9B,MAAO,CACLC,KCV8B,qBDW9BC,QAASF,KEqCEG,eANS,SAAC,GACvB,MAAO,CAAEwB,cADmD,EAAnCC,UAAaD,iBAMA7B,EAAzBK,EAzCI,SAAC,GAA2D,IAAzDwB,EAAwD,EAAxDA,cAAeH,EAAyC,EAAzCA,kBAAmBE,EAAsB,EAAtBA,gBA8BtD,OAA6B,IAAzBC,EAAcE,OAAqB,KAEhC,kBAAC,IAAD,CAAMC,WAAYH,EAAeI,WA/BrB,SAACC,GAClB,OACE,kBAAC,IAAKC,KAAN,CACEC,QAAS,CACP,kBAAC,IAAD,CACEC,IAAI,iBACJlC,KAAK,OACLmC,QAAS,kBAAMV,EAAgBM,KAHjC,QAOA,kBAAC,IAAD,CACEG,IAAI,mBACJlC,KAAK,OACLmC,QAAS,kBAAMZ,EAAkBQ,EAAKK,YAHxC,YASF,kBAAC,IAAKJ,KAAKK,KAAX,CACEC,OAAQ,kBAAC,IAAD,CAAQC,IAAKR,EAAKS,OAC1BC,MAAOV,EAAKW,KACZC,YAAaZ,EAAKa,2B,SCxBbC,G,OAJA,kBACb,yBAAKxB,UAAU,aCuBFnB,eAJS,SAAC,GACvB,MAAO,CAAE4C,YADiD,EAAjCnB,UAAamB,eAIzB5C,EAvBM,SAAC,GAAqB,IAAnB4C,EAAkB,EAAlBA,YAEtB,OACE,yBAAKC,MAAO,CAAEC,OAAQ,QAASC,MAAO,SACpC,kBAAC,IAAD,CACEC,iBAAkBC,0CAClBC,YAAa,GACbC,OAAQP,GAER,kBAAC,EAAD,CACEQ,IAAKR,EAAYQ,IACjBC,IAAKT,EAAYS,IACjBC,KAAK,cCGAC,EAdG,WAChB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,KAAM,GACT,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAKA,KAAM,IACT,kBAAC,EAAD,SCFOC,MATf,WACE,OACE,6BAEE,kBAAC,EAAD,Q,2CCDAC,EAAe,CACnBd,YAAa,CACXQ,IAAK,UACLC,IAAK,aAEP7B,cAAe,ICRXmC,EAAW,CAAElC,UDWS,WAAmC,IAAlCmC,EAAiC,uDAAzBF,EAAcG,EAAW,uCAC5D,OAAOA,EAAO/D,MACZ,INhBuC,8BMiBrC,OAAO,2BACF8D,GADL,IAEEhB,YAAa,CACXQ,IAAKS,EAAO9D,QAAQ+D,SAASC,SAASX,MACtCC,IAAKQ,EAAO9D,QAAQ+D,SAASC,SAASV,OAExC7B,cAAc,GAAD,mBACRoC,EAAMpC,eADE,CAEXqC,EAAO9D,YAIb,IN5B8B,qBM6B5B,OAAO,2BACF6D,GADL,IAEEhB,YAAa,CACXQ,IAAKS,EAAO9D,QAAQ+D,SAASC,SAASX,MACtCC,IAAKQ,EAAO9D,QAAQ+D,SAASC,SAASV,SAI5C,INpCgC,uBMqC9B,OAAO,2BACFO,GADL,IAEEpC,cAAeoC,EAAMpC,cAAcwC,QAAO,SAACC,GAAD,OAAYA,EAAO/B,WAAa2B,EAAO9D,aAGrF,QACE,OAAO6D,KCvCEM,EADKC,0BAAgBR,GCA9BS,EAAaC,8BAAoBC,0BAAgBC,MAGxCC,EAFDC,6BAAmBP,EAAaE,GCE9CM,IAASC,OACP,kBAAC,IAAD,CAAUH,MAAOA,GACf,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.640aa097.chunk.js","sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport { connect } from 'react-redux';\nimport { searchMapOnPlaceChanged } from '../../../../store/actions/searchMapActions';\n\nconst SearchInput = ({ searchMapOnPlaceChanged }) => {\n  const inputRef = useRef();\n  const googleMapsRef = useRef();\n\n  const handlePlaceChanged = useCallback(() => {\n    const place = googleMapsRef.current.getPlace();\n    inputRef.current.value = '';\n    searchMapOnPlaceChanged(place);\n  }, [searchMapOnPlaceChanged]);\n\n  useEffect(() => {\n    googleMapsRef.current = new window.google.maps.places.Autocomplete(inputRef.current);\n    const mapListener = googleMapsRef.current.addListener('place_changed', handlePlaceChanged);\n\n    return () => {\n      googleMapsRef.current.removeListener(mapListener);\n    };\n  }, [handlePlaceChanged]);\n\n  return (\n    <input\n      ref={inputRef}\n      className=\"ant-input\"\n      placeholder=\"Search for places\"\n    />\n  );\n};\n\nconst mapDispatchToProps = { searchMapOnPlaceChanged };\n\nexport default connect(null, mapDispatchToProps)(SearchInput);\n","import { SEARCH_MAP_ON_DELETE, SEARCH_MAP_ON_PLACE_CHANGED, SEARCH_MAP_ON_VIEW } from \"./types\";\n\nexport const searchMapOnPlaceChanged = (place) => {\n  return {\n    type: SEARCH_MAP_ON_PLACE_CHANGED,\n    payload: place\n  };\n};\n\nexport const searchMapOnView = (place) => {\n  return {\n    type: SEARCH_MAP_ON_VIEW,\n    payload: place\n  };\n};\n\nexport const searchMapOnDelete = (placeId) => {\n  return {\n    type: SEARCH_MAP_ON_DELETE,\n    payload: placeId\n  };\n};\n","export const SEARCH_MAP_ON_PLACE_CHANGED = 'SEARCH_MAP_ON_PLACE_CHANGED';\nexport const SEARCH_MAP_ON_VIEW = 'SEARCH_MAP_ON_VIEW';\nexport const SEARCH_MAP_ON_DELETE = 'SEARCH_MAP_ON_DELETE';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Avatar, List, Button } from 'antd';\nimport {\n  searchMapOnDelete,\n  searchMapOnView\n} from '../../../../store/actions/searchMapActions';\n\nconst SearchList = ({ searchResults, searchMapOnDelete, searchMapOnView }) => {\n  const renderItem = (item) => {\n    return (\n      <List.Item\n        actions={[\n          <Button\n            key=\"list-item-view\"\n            type=\"link\"\n            onClick={() => searchMapOnView(item)}\n          >\n            View\n          </Button>,\n          <Button\n            key=\"list-item-delete\"\n            type=\"link\"\n            onClick={() => searchMapOnDelete(item.place_id)}\n          >\n            Delete\n          </Button>\n        ]}\n      >\n        <List.Item.Meta\n          avatar={<Avatar src={item.icon} />}\n          title={item.name}\n          description={item.formatted_address}\n        />\n      </List.Item>\n    );\n  };\n\n  if (searchResults.length === 0) return null;\n\n  return <List dataSource={searchResults} renderItem={renderItem} />;\n};\n\nconst mapStateToProps = ({ searchMap: { searchResults } }) => {\n  return { searchResults };\n};\n\nconst mapDispatchToProps = { searchMapOnDelete, searchMapOnView };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchList);\n","\nimport React from 'react';\nimport './styles.css';\n\nconst Marker = () => (\n  <div className=\"marker\" />\n);\n\nexport default Marker;\n","import React from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { connect } from 'react-redux';\nimport Marker from './components/marker';\n\nconst SearchResult = ({ coordinates }) => {\n\n  return (\n    <div style={{ height: '100vh', width: '100%' }}>\n      <GoogleMapReact\n        bootstrapURLKeys={process.env.REACT_APP_GOOGLE_API_KEY}\n        defaultZoom={16}\n        center={coordinates}\n      >\n        <Marker\n          lat={coordinates.lat}\n          lng={coordinates.lng}\n          text=\"here\"\n        />\n      </GoogleMapReact>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ searchMap: { coordinates } }) => {\n  return { coordinates };\n};\n\nexport default connect(mapStateToProps)(SearchResult);\n","import React from 'react';\nimport { Col, Row } from 'antd';\nimport SearchInput from './components/searchInput/SearchInput';\nimport SearchList from './components/searchList/SearchList';\nimport SearchResult from './components/searchResult/SearchResult';\n\nconst SearchMap = () => {\n  return (\n    <Row>\n      <Col span={8}>\n        <SearchInput />\n        <SearchList />\n      </Col>\n      <Col span={16}>\n        <SearchResult />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SearchMap;\n","import React from 'react';\nimport SearchMap from './pages/searchMap/SearchMap';\n\nfunction App() {\n  return (\n    <div>\n      {/* page routes goes here when needed */}\n      <SearchMap />\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  SEARCH_MAP_ON_PLACE_CHANGED,\n  SEARCH_MAP_ON_VIEW,\n  SEARCH_MAP_ON_DELETE\n} from \"../actions/types\";\n\nconst defaultState = {\n  coordinates: {\n    lat: 1.2760274,\n    lng: 103.7993483\n  },\n  searchResults: []\n};\n\nconst searchResultReducer = (state = defaultState, action) => {\n  switch(action.type) {\n    case SEARCH_MAP_ON_PLACE_CHANGED: {\n      return {\n        ...state,\n        coordinates: {\n          lat: action.payload.geometry.location.lat(),\n          lng: action.payload.geometry.location.lng(),\n        },\n        searchResults: [\n          ...state.searchResults,\n          action.payload\n        ]\n      };\n    }\n    case SEARCH_MAP_ON_VIEW: {\n      return {\n        ...state,\n        coordinates: {\n          lat: action.payload.geometry.location.lat(),\n          lng: action.payload.geometry.location.lng(),\n        }\n      };\n    }\n    case SEARCH_MAP_ON_DELETE: {\n      return {\n        ...state,\n        searchResults: state.searchResults.filter((result) => result.place_id !== action.payload)\n      };\n    }\n    default:\n      return state;\n  }\n}\n\nexport default searchResultReducer;\n","import { combineReducers } from 'redux';\nimport searchResults from './searchResultsReducer';\n\nconst reducers = { searchMap: searchResults };\n\nconst rootReducer = combineReducers(reducers);\nexport default rootReducer;\n","import { applyMiddleware, legacy_createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst middleware = composeWithDevTools(applyMiddleware(thunk));\nconst store = legacy_createStore(rootReducer, middleware);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}